
/**
* \mainpage Documentation
*
* \section intro_sec Introduction
*
* <i>PcapPlusPlus</i> is a multiplatform C++ network sniffing and packet parsing and manipulation framework.<br>
* <i>PcapPlusPlus</i> is meant to be lightweight, efficient and easy to use.
*
* \section install_sec Installation
*
* Please visit the <a href="http://seladb.github.io/PcapPlusPlus-Doc/">PcapPlusPlus web-site</a> in order to see download and installation instructions.
*
* \section getting_started_sec Getting Started
*
* <b>%Packet capturing engines (Pcap++):</b>
*   - pcpp::PcapLiveDevice, PcapLiveDevice.h - wrapper for libPacp engine (Linux)
*   - pcpp::WinPcapLiveDevice, WinPcapLiveDevice.h - wrapper for WinPcap engine (Windows)
*   - pcpp::PcapRemoteDevice, PcapRemoteDevice.h - remote live device, supported by WinPcap(Windows)
*   - pcpp::PfRingDevice, PfRingDevice.h - Vanilla PF_RING device (Linux)
*   - pcpp::DpdkDevice, DpdkDevice.h - DPDK device (Linux)
*   - pcpp::KniDevice, KniDevice.h - DPDK KNI device (Linux)
*   - pcpp::RawSocketDevice, RawSocketDevice.h - raw socket wrapper (Windows and Linux)
*   - PcapFilter.h - structured filter engine
*
* <b>Capture file wrappers (Pcap++):</b>
*   - pcpp::PcapFileReaderDevice, PcapFileDevice.h - read Pcap files
*   - pcpp::PcapFileWriterDevice, PcapFileDevice.h - write Pcap files
*   - pcpp::PcapNgFileReaderDevice, PcapFileDevice.h - read PcapNG files
*   - pcpp::PcapNgFileWriterDevice, PcapFileDevice.h - write PcapNG files
*
* <b>%Packet parsing and manipulation (Packet++):</b>
*   - pcpp::RawPacket, RawPacket.h - raw data class
*   - pcpp::Packet, Packet.h - parsed packet class
*   - pcpp::Layer, Layer.h - protocol base class
*
* <b>Supported protocols (Packet++):</b>
*   - pcpp::EthLayer, EthLayer.h - Ethernet protocol
*   - pcpp::SllLayer, SllLayer.h - SLL protocol (Linux cooked capture)
*   - pcpp::NullLoopbackLayer, NullLoopbackLayer.h - Null/Loopback
*   - pcpp::PacketTrailerLayer, PacketTrailerLayer.h - packet trailer (a.k.a footer or padding)
*   - pcpp::ArpLayer, ArpLayer.h - ARP protocol
*   - pcpp::VlanLayer, VlanLayer.h - VLAN protocol
*   - pcpp::VxlanLayer, VxlanLayer.h - VXLAN protocol
*   - pcpp::MplsLayer, MplsLayer.h - MPLS protocol
*   - pcpp::PPPoESessionLayer, pcpp::PPPoEDiscoveryLayer, PPPoELayer.h - PPPoE protocol
*   - pcpp::GREv0Layer, pcpp::GREv1Layer, pcpp::PPP_PPTPLayer, GreLayer.h - GRE and PPTP protocol
*   - pcpp::IPv4Layer, IPv4Layer.h - IPv4 protocol
*   - pcpp::IPv6Layer, IPv6Layer.h - IPv6 protocol
*   - pcpp::TcpLayer, TcpLayer.h - TCP protocol
*   - pcpp::UdpLayer, UdpLayer.h - UDP protocol
*   - pcpp::IcmpLayer, IcmpLayer.h - ICMP protocol
*   - pcpp::IgmpLayer, IgmpLayer.h - IGMP protocol
*   - pcpp::SipRequestLayer, SipLayer.h - SIP request protocol
*   - pcpp::SipResponseLayer, SipLayer.h - SIP response protocol
*   - pcpp::SdpLayer, SdpLayer.h - SDP protocol
*   - pcpp::RadiusLayer, RadiusLayer.h - RADIUS protocol
*   - pcpp::DnsLayer, DnsLayer.h - DNS protocol
*   - pcpp::DhcpLayer, DhcpLayer.h - DHCP protocol
*   - pcpp::HttpRequestLayer, HttpLayer.h - HTTP request protocol
*   - pcpp::HttpResponseLayer, HttpLayer.h - HTTP response protocol
*   - pcpp::SSLLayer, SSLLayer.h - SSL/TLS protocol - parsing only (no editing capabilities)
*   - pcpp::PayloadLayer, PayloadLayer.h - unknown layer or payload
*
* <b>Common utilities and infrastructure (Common++, Packet++, Pcap++):</b>
*   - pcpp::IPAddress, pcpp::IPv4Address, pcpp::IPv6Address, IpAddress.h - IP address wrapper classes
*   - pcpp::MacAddress, MacAddress.h - MAC address wrapper class
*   - pcpp::TcpReassembly, TcpReassembly.h - Implementation of TCP reassembly logic
*   - pcpp::IPReassembly, IPReassembly.h - Implementation of IP reassembly logic (a.k.a IP de-fragmentation). Works for both IPv4 and IPv6
*   - IpUtils.h - all kinds of helpful network utilities
*   - PacketUtils.h - useful packet processing utils such as creating a hash value for a packet
*   - NetworkUtils.h - several useful and common network utilities
*   - SystemUtils.h - several useful utilities for interactiong with the operating system
*   - pcpp::LoggerPP, Logger.h - PcapPlusPlus logger
*   - PcapPlusPlusVersion.h - version and Git info
*/

